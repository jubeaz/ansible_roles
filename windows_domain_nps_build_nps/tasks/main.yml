# https://www.faqforge.com/windows/configure-dhcp-powershell/

- name: Install NPS
  ansible.windows.win_feature:
    name: NPAS
    state: present
    include_management_tools: true
  register: win_feature

- name: Encure NPS service is running (auto)
  ansible.windows.win_service:
    name: IAS
    start_mode: auto
    state: started
  register: win_service

- name: Reboot if installing windows feature requires it
  ansible.windows.win_reboot:
  when: win_feature.reboot_required


- name: Register NPS
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      Param (
          [switch]$IgnoreNoRevocationCheck
      )
      # Configure NPS security settings. Requires KB5040268
      [void](Invoke-Command -ScriptBlock { netsh.exe nps set limitproxystate all = "enable" })
      [void](Invoke-Command -ScriptBlock { netsh.exe nps set requiremsgauth all = "enable" })
      # Enable auditing
      [void](auditpol.exe /set /subcategory:"Network Policy Server" /success:enable /failure:enable)
      # Update group policy and validate auditing setting
      [void](Invoke-Command -ScriptBlock { gpupdate.exe /force })

      $Validate = auditpol.exe /get /subcategory:"Network Policy Server" | Select-String 'Success and Failure'
      If ($Null -eq $Validate) {
          Write-Warning 'NPS auditing disabled after group policy update. Check group policy settings and confirm.'
      }
      If ($IgnoreNoRevocationCheck) {
          # Grant access even when NPS cannot CRL
          $Params = @{
              Path         = 'HKLM:\SYSTEM\CurrentControlSet\Services\RasMan\PPP\EAP\13\'
              Name         = 'IgnoreNoRevocationCheck'
              PropertyType = 'DWORD'
              Value        = 1
              Force        = $True
          }
          [void](New-ItemProperty @Params)
      }

      # Identify domain membership information
      $Domain = (Get-CimInstance -ClassName CIM_ComputerSystem).Domain
      [void](Invoke-Command -ScriptBlock { netsh.exe nps add registeredserver $Domain $env:computername })

      # Install workaround for NPS issue on Windows Server 2019
      $OSVersion = (Get-CimInstance 'Win32_OperatingSystem').Version
      If ($OSVersion -eq '10.0.17763') {
          [void](Invoke-Command -ScriptBlock { sc.exe sidtype IAS unrestricted })
      }
    parameters:
      IgnoreNoRevocationCheck: false
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ nps_domain_name }}\\Administrator"
    ansible_become_password: "{{ nps_domain_password }}"
    ansible_become_flags: logon_flags=
