- name: Save timeout parameters
  ansible.builtin.set_fact:
    ansible_psrp_connection_timeout_save: "{{ ansible_psrp_connection_timeout }}"
    ansible_psrp_operation_timeout_save: "{{ ansible_psrp_operation_timeout }}"
    ansible_winrm_connection_timeout_save: "{{ ansible_winrm_connection_timeout }}"

- name: ansible timeout to 1 hour
  ansible.builtin.set_fact:
    ansible_psrp_connection_timeout: 3600
    ansible_psrp_operation_timeout: 3600
    ansible_winrm_connection_timeout: 3600

- name: Create directory to store the downloaded prerequisite files
  ansible.windows.win_file:
    path: C:\setup
    state: directory

- name: Check Echange installation media exists
  ansible.windows.win_stat:
    path: "C:\\setup\\{{ exchange_installation_media_name }}"
  register: echange_installer_file

- name: Download Echange installation media
  ansible.windows.win_get_url:
    url: "{{ exchange_installation_media_url }}"
    dest: "C:\\setup\\{{ exchange_installation_media_name }}"
  when: not echange_installer_file.stat.exists

- name: Install WindowsFeature RSAT-ADDS
  ansible.windows.win_feature:
    name: RSAT-ADDS
    state: present
    include_management_tools: true

- name: Check AD Schema
  ansible.builtin.include_tasks: validate_ad_schema.yml

- name: Extend Active Directory Schema
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $ISOName
      )
      $mountResult = Mount-DiskImage -ImagePath "c:\setup\$ISOName"
      $driveLetter = ($mountResult | Get-Volume).DriveLetter
      $command = "${driveLetter}:\Setup.exe /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF /PrepareSchema"
      Invoke-Expression $command
      Dismount-DiskImage -ImagePath "c:\setup\$ISOName"
    parameters:
      ISOName: "{{ exchange_installation_media_name }}"
  when: validate_ad_schema.failed
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ domain_name }}\\Administrator"
    ansible_become_password: "{{ domain_password }}"

## Need to remove the file since data are append
## fail because utf8
#- name: check log result
#  community.windows.win_lineinfile:
#    name: c:\ExchangeSetupLogs\ExchangeSetup.log
#    line: "The Exchange Server setup operation completed successfully"
#    state: present
#  check_mode: true
#  register:  ad_schema_update
#  failed_when: (ad_schema_update is changed) or (ad_schema_update is failed)
#  when: validate_ad_schema.failed

- name: Check AD Schema updated successfully
  ansible.builtin.include_tasks: validate_ad_schema.yml
  when: validate_ad_schema.failed

- name: Failed
  ansible.builtin.fail:
    msg: "AD schema update failed"
  when: validate_ad_schema.failed


- name: Synchronizes all domains
  ansible.windows.win_shell: repadmin /syncall /AdeP
  vars:
    become: true
    become_method: ansible.builtin.runas
    become_user: "{{ domain_name }}\\Administrator"
    ansible_become_pass: "{{ domain_password }}"
  when: multi_domain_forest is true

- name: Check AD Prepared
  ansible.builtin.include_tasks: validate_ad_prepared.yml

- name: Prepare Active Directory (containers creation)
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $ISOName,
          [String]
          $CorpName
      )
      $mountResult = Mount-DiskImage -ImagePath "c:\setup\$ISOName"
      $driveLetter = ($mountResult | Get-Volume).DriveLetter
      $command = "${driveLetter}:\Setup.exe /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF /PrepareAD /OrganizationName:`"$CorpName`""
      Invoke-Expression $command
      Dismount-DiskImage -ImagePath "c:\setup\$ISOName"
    parameters:
      ISOName: "{{ exchange_installation_media_name }}"
      CorpName: "{{ corp_name }}" 
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ domain_name }}\\Administrator"
    ansible_become_password: "{{ domain_password }}"
  when: validate_ad_prepared.failed

## Need to remove the file since data are append
## fail because utf8
#- name: check log result AD Prepare
#  community.windows.win_lineinfile:
#    name: c:\ExchangeSetupLogs\ExchangeSetup.log
#    line: "The Exchange Server setup operation completed successfully"
#    state: present
#  check_mode: true
#  register:  ad_schema_update
#  failed_when: (ad_schema_update is changed) or (ad_schema_update is failed)
#  when: validate_ad_prepared.failed


- name: Prepare Active Directory Forest
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $ISOName
      )
      $mountResult = Mount-DiskImage -ImagePath "c:\setup\$ISOName"
      $driveLetter = ($mountResult | Get-Volume).DriveLetter
      $command = "${driveLetter}:\Setup.exe /IAcceptExchangeServerLicenseTerms_DiagnosticDataOFF /PrepareAllDomains"
      Invoke-Expression $command
      Dismount-DiskImage -ImagePath "c:\setup\$ISOName"
    parameters:
      ISOName: "{{ exchange_installation_media_name }}"
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ domain_name }}\\Administrator"
    ansible_become_password: "{{ domain_password }}"
  when: validate_ad_prepared.failed

## Need to remove the file since data are append
## fail because utf8
#- name: check log result AD Prepare All Domains
#  community.windows.win_lineinfile:
#    name: c:\ExchangeSetupLogs\ExchangeSetup.log
#    line: "The Exchange Server setup operation completed successfully"
#    state: present
#  check_mode: true
#  register:  ad_schema_update
#  failed_when: (ad_schema_update is changed) or (ad_schema_update is failed)
#  when: validate_ad_prepared.failed

- name: Check AD Prepare successfully
  ansible.builtin.include_tasks: validate_ad_schema.yml
  when: validate_ad_prepared.failed

- name: restore timeout 
  ansible.builtin.set_fact:
    ansible_psrp_connection_timeout: "{{ ansible_psrp_connection_timeout_save }}"
    ansible_psrp_operation_timeout: "{{ ansible_psrp_operation_timeout_save }}"
    ansible_winrm_connection_timeout: "{{ ansible_winrm_connection_timeout_save }}"

