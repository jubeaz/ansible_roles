- name: Set acl on CA
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $for,
          [String]
          $to,
          [String]
          $right,
          [String]
          $inheritance
      )

      Import-Module -Name PSPKI
      $CA =  Get-CertificationAuthority -Name $to
      Write-Output "CA found : $($CA.DistinguishedName)"

      $CA | Get-CertificationAuthorityAcl | Add-CertificationAuthorityAcl -Identity $for -AccessType "Allow" -AccessMask $right |
        Set-CertificationAuthorityAcl
    error_action: stop
    parameters:
      for: "{{ item.value.for }}"
      to: "{{ item.value.to }}"
      right: "{{ item.value.right }}"
      inheritance: "{{ item.value.inheritance }}"
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ domain_name }}\\Administrator"
    ansible_become_password: "{{ domain_password }}"
  with_dict: "{{  acls  }}"
  register: adcs_acl_authority_result

- name: Restart CA
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $CAName
      )

      Import-Module -Name PSPKI
      $CA =  Get-CertificationAuthority -Name $to
      Write-Output "CA found : $($CA.DistinguishedName)"

      $CA | Restart-CertificationAuthority

    error_action: stop
    parameters:
      CAName: "{{ CAName }}"
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ domain_name }}\\Administrator"
    ansible_become_password: "{{ domain_password }}"

# - debug:
#     var: adcs_acl_authority_result
