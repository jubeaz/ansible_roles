---
- name: "Install {{ requiered_app_name }}"
  ansible.windows.win_powershell:
    script: |
      [CmdletBinding()]
      param (
          [String]
          $AppName,
          [String]
          $URL,
          [String]
          $AppPath,
          [String]
          $InstallCommand
      )
      $Ansible.Changed = $false
      $Ansible.Failed = $false
      try {
        $app = Get-Package -ProviderName Programs -IncludeWindowsInstaller |  where {$_.name -eq $AppName }
      }
      Catch {
        $app=$null
      }
      if ($app -eq $null) {
        $Ansible.Changed = $true
        try {
          invoke-webrequest -URI $URL -OutFile $AppPath -UseBasicParsing
        }
        catch {
          $Ansible.Failed = $true
          Throw "Error Downloading"
        }
        invoke-expression $InstallCommand
        try {
          $app = Get-Package -ProviderName Programs -IncludeWindowsInstaller -Force |  where {$_.name -eq $AppName }
        }
        Catch {
          $app=$null
        }
        if ($app -eq $null) {
          $Ansible.Failed = $true
          $Ansible.Result = "Failed to install"
        }
      }
    parameters:
      AppName: "{{ requiered_app_name }}"
      URL: "{{ requiered_app_url }}"
      AppPath: "{{ requiered_app_path }}"
      InstallCommand: "{{ requiered_app_install_cmd }}"
  vars:
    ansible_become: true
    ansible_become_method: runas
    ansible_become_user: "{{ xchg_domain_name }}\\Administrator"
    ansible_become_password: "{{ xchg_domain_password }}"
