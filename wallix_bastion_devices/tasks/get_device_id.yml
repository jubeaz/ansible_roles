- name: "Get Wallix Bastion devices id for {{ device.key }}"
  ansible.builtin.uri:
    url: "{{ wallix_bastion_device_url }}/devices/?q=device_name={{ device.key }}"
    method: GET
    body_format: json
    validate_certs: false
    status_code:
      - 200
    headers:
      X-Auth-User: "{{ wallix_bastion_device_api_key.user }}"
      X-Auth-Key: "{{  wallix_bastion_device_api_key.key }}"
  register: wallix_response


#- name: Display wallix_response
#  ansible.builtin.debug:
#    var: wallix_response


- name: Extract ID from response and update device entry
  ansible.builtin.set_fact:
    wallix_bastion_device_plbr_devices: |
      {{ wallix_bastion_device_plbr_devices | default([]) | 
        combine({ 
          device.key: {
            'key': device.value.key, 
            'host': device.value.host, 
            'wallix_device_id': (wallix_response.json[0].id | default('UNKNOWN')),
            'local_domain':  device.value.local_domain,
            'wallix_local_domain_id': (wallix_response.json[0] | community.general.json_query('local_domains[0].id') | default('UNKNOWN')),
            'services':  device.value.services
          }
        })
      }}

#- name: Display plbr_devices
#  ansible.builtin.debug:
#    var: wallix_bastion_device_plbr_devices